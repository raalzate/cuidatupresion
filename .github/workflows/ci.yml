# .github/workflows/ci-cd.yml

name: CI/CD Pipeline | Test, Analyze & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # ------ TRABAJO DE PRUEBAS Y AN√ÅLISIS ------
  test:
    name: Test & Analyze
    runs-on: ubuntu-latest

    steps:
      - name: 1. Check out the repository
        uses: actions/checkout@v4

      - name: 2. Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm' # Habilita el cach√© para npm

      - name: 3. Install dependencies
        # Usa npm ci para instalaciones m√°s r√°pidas y consistentes en CI
        run: npm ci

      - name: 4. Run tests with coverage
        run: npm run test:ci -- --coverage

      - name: 5. Send coverage report to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  # ------ TRABAJO DE DESPLIEGUE A VERCEL ------
  # ------ TRABAJO DE DESPLIEGUE A VERCEL ------
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      # üëá ESTE PASO ES ESENCIAL Y DEBE ESTAR PRIMERO üëá
      - name: 1. Check out the repository
        uses: actions/checkout@v4

      - name: 2. Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: 3. Deploy to Vercel Production
        uses: vercel/vercel-action@v3 # 
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-prod: true